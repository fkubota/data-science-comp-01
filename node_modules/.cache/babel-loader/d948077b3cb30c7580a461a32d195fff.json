{"remainingRequest":"/home/fkubota/Git/data-science-comp-01/node_modules/babel-loader/lib/index.js!/home/fkubota/Git/data-science-comp-01/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/home/fkubota/Git/data-science-comp-01/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/fkubota/Git/data-science-comp-01/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/fkubota/Git/data-science-comp-01/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/fkubota/Git/data-science-comp-01/src/App.vue","mtime":1586653725695},{"path":"/home/fkubota/Git/data-science-comp-01/node_modules/cache-loader/dist/cjs.js","mtime":1586602393340},{"path":"/home/fkubota/Git/data-science-comp-01/node_modules/babel-loader/lib/index.js","mtime":1586602393348},{"path":"/home/fkubota/Git/data-science-comp-01/node_modules/vuetify-loader/lib/loader.js","mtime":1586602393040},{"path":"/home/fkubota/Git/data-science-comp-01/node_modules/cache-loader/dist/cjs.js","mtime":1586602393340},{"path":"/home/fkubota/Git/data-science-comp-01/node_modules/vue-loader/lib/index.js","mtime":1586602393268}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-app>\n    <v-app-bar color=\"primary\" dark app class='title'>\n      <v-toolbar-title>Data Science Competition #1</v-toolbar-title>\n      <v-spacer></v-spacer>\n      <v-btn x-large icon dark @click='getRankingTable'>\n        <v-icon dark>mdi-cached</v-icon>\n      </v-btn>\n    </v-app-bar>\n    <v-content>\n      <v-container>\n        <v-row>\n          <v-col>\n            <v-select v-model=\"selection_name\" :items='names' label='select your name'> </v-select>\n          </v-col>\n          <v-col>\n            <v-file-input @change='fileSelect' show-size label='selec your submission file' accept='.csv' ></v-file-input>\n          </v-col>\n        </v-row>\n        <v-row justify='end'>\n            <v-btn x-large color='primary' @click='testApi' outlined target='#de'>{{test_api}}</v-btn>\n            <v-btn x-large color='primary' @click='getScore' outlined target='#de'>submit</v-btn>\n        </v-row>\n        <v-list-item-title class=\"title grey--text text--darken-2\" align='center' style='margin-top: 30px'>\n          your submission score is <h2><font color='blue'>{{score}}</font></h2>\n        </v-list-item-title>\n        <v-divider></v-divider>\n        <v-list-item-title class=\"title grey--text text--darken-2\" align='center' style='margin-top: 30px'>\n          Leaderboard\n        </v-list-item-title>\n        <v-data-table\n          :headers=\"headers\" \n          :items=\"participants\" \n          :items-per-page=\"10\" \n          class=\"elevation-1 category-table\"\n          style=\"margin-left: 100px; margin-right: 100px;\" >\n          <template slot=\"items\" slot-scope=\"props\">\n            <td class=\"text-xs-right\">{{ props.item.code }}</td>\n            <td class=\"text-xs-right\">{{ props.item.name }}</td>\n            <td class=\"text-xs-right\">{{ props.item.workerType }}</td>\n          </template>\n        </v-data-table>\n      </v-container>\n    </v-content>\n  </v-app>\n</template>\n<script>\nimport axios from 'axios'\n  export default {\n    data () {\n      return {\n        heroku_addr: 'https://data-science-comp-01.herokuapp.com/',\n        test_api:'test_api',\n        score: '...',\n        hello: '',\n        subData: '',\n        rankingTable: '',\n        sortBy: 'rank',\n        sortDesc: false,\n        selection_name: '',\n        names: ['A', 'B', 'C'],\n        dropdown_font: ['Arial', 'Calibri', 'Courier', 'Verdana'],\n        headers: [\n          {\n            text: '#',\n            align: 'center',\n            sortable: false,\n            value: 'rank',\n          },\n          { text: 'Name', value: 'name'},\n          { text: 'Score', value: 'score'},\n          { text: 'N_Submission', value: 'n_submission' },\n        ],\n        participants: [\n          {\n            rank: 1,\n            name: 'A',\n            score: 159,\n            n_submission: 6.0,\n          },\n          {\n            rank: 2,\n            name: 'B',\n            score: 237,\n            n_submission: 9.0,\n          },\n          {\n            rank: 3,\n            name: 'C',\n            score: 262,\n            n_submission: 16.0,\n          },\n        ],\n      }\n    },\n    methods: {\n      async testApi(){\n        console.log('func-↓testApi')\n        // POST\n        // await axios.post('https://data-science-comp-01.herokuapp.com/test_func', {\n        await axios.post(this.heroku_addr+'est_func', {\n          test: 'hello_api',\n        })\n        .then((response) => {\n          this.test_api = response.data.test_return\n        })\n      },\n      readFileAsync (file) {\n        return new Promise((resolve, reject) => {\n          const reader = new FileReader()\n          reader.onload = () => {\n            resolve(reader.result)\n          }\n          reader.onerror = reject\n          reader.readAsText(file)\n        })\n      },\n      async fileSelect(file){\n        console.log('func-↓fileSelect')\n        try {\n          const csv = await this.readFileAsync(file)\n          this.subData = csv\n        } catch (e) {\n          console.log(e)\n        }\n      },\n      async getScore(){\n        console.log('func-↓getScore')\n        // POST\n        await axios.post('http://127.0.0.1:5003/get_score', {\n          arg_subData: this.subData,\n          arg_selection_name: this.selection_name,\n        })\n        .then((response) => {\n          this.score = response.data.score\n          this.getRankingTable()\n        })\n      },\n      async getRankingTable(){\n        console.log('func-↓getRankingTable')\n        // POST\n        await axios.post('http://127.0.0.1:5003/get_ranking_table', {\n        })\n        .then((response) => {\n          this.rankingTable = response.data.ranking_table\n        })\n        console.log(this.rankingTable)\n        this.updateRankingTable()\n      },\n      updateRankingTable() {\n        console.log('func-↓updateRankingTable')\n        const participants = [];\n        const lines = this.rankingTable.split(\"\\n\");\n        lines.forEach(element => {\n          const participantsData = element.split(\",\");\n          const participant = {\n            rank: participantsData[0],\n            name: participantsData[1],\n            score: participantsData[2],\n            n_submission: participantsData[3]\n          };\n          participants.push(participant);\n        this.participants = participants\n        });\n      },\n    },\n    // mounted () {\n    created () {\n      console.log('func-↓mounted')\n      console.log(this.participants)\n      this.getRankingTable()\n    }\n  }\n</script>\n"],"sourceRoot":"src"}]}