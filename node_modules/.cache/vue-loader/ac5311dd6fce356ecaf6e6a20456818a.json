{"remainingRequest":"/home/fkubota/Git/data-science-comp-01/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/fkubota/Git/data-science-comp-01/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/fkubota/Git/data-science-comp-01/src/App.vue","mtime":1586606498627},{"path":"/home/fkubota/Git/data-science-comp-01/node_modules/cache-loader/dist/cjs.js","mtime":1586602393340},{"path":"/home/fkubota/Git/data-science-comp-01/node_modules/babel-loader/lib/index.js","mtime":1586602393348},{"path":"/home/fkubota/Git/data-science-comp-01/node_modules/vuetify-loader/lib/loader.js","mtime":1586602393040},{"path":"/home/fkubota/Git/data-science-comp-01/node_modules/cache-loader/dist/cjs.js","mtime":1586602393340},{"path":"/home/fkubota/Git/data-science-comp-01/node_modules/vue-loader/lib/index.js","mtime":1586602393268}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdheGlvcycKICBleHBvcnQgZGVmYXVsdCB7CiAgICBkYXRhICgpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICB0ZXN0X2FwaTondGVzdF9hcGknLAogICAgICAgIHNjb3JlOiAnLi4uJywKICAgICAgICBoZWxsbzogJycsCiAgICAgICAgc3ViRGF0YTogJycsCiAgICAgICAgcmFua2luZ1RhYmxlOiAnJywKICAgICAgICBzb3J0Qnk6ICdyYW5rJywKICAgICAgICBzb3J0RGVzYzogZmFsc2UsCiAgICAgICAgc2VsZWN0aW9uX25hbWU6ICcnLAogICAgICAgIG5hbWVzOiBbJ0EnLCAnQicsICdDJ10sCiAgICAgICAgZHJvcGRvd25fZm9udDogWydBcmlhbCcsICdDYWxpYnJpJywgJ0NvdXJpZXInLCAnVmVyZGFuYSddLAogICAgICAgIGhlYWRlcnM6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgdGV4dDogJyMnLAogICAgICAgICAgICBhbGlnbjogJ2NlbnRlcicsCiAgICAgICAgICAgIHNvcnRhYmxlOiBmYWxzZSwKICAgICAgICAgICAgdmFsdWU6ICdyYW5rJywKICAgICAgICAgIH0sCiAgICAgICAgICB7IHRleHQ6ICdOYW1lJywgdmFsdWU6ICduYW1lJ30sCiAgICAgICAgICB7IHRleHQ6ICdTY29yZScsIHZhbHVlOiAnc2NvcmUnfSwKICAgICAgICAgIHsgdGV4dDogJ05fU3VibWlzc2lvbicsIHZhbHVlOiAnbl9zdWJtaXNzaW9uJyB9LAogICAgICAgIF0sCiAgICAgICAgcGFydGljaXBhbnRzOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgIHJhbms6IDEsCiAgICAgICAgICAgIG5hbWU6ICdBJywKICAgICAgICAgICAgc2NvcmU6IDE1OSwKICAgICAgICAgICAgbl9zdWJtaXNzaW9uOiA2LjAsCiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICByYW5rOiAyLAogICAgICAgICAgICBuYW1lOiAnQicsCiAgICAgICAgICAgIHNjb3JlOiAyMzcsCiAgICAgICAgICAgIG5fc3VibWlzc2lvbjogOS4wLAogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgcmFuazogMywKICAgICAgICAgICAgbmFtZTogJ0MnLAogICAgICAgICAgICBzY29yZTogMjYyLAogICAgICAgICAgICBuX3N1Ym1pc3Npb246IDE2LjAsCiAgICAgICAgICB9LAogICAgICAgIF0sCiAgICAgIH0KICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgIGFzeW5jIHRlc3RBcGkoKXsKICAgICAgICBjb25zb2xlLmxvZygnZnVuYy3ihpN0ZXN0QXBpJykKICAgICAgICAvLyBQT1NUCiAgICAgICAgYXdhaXQgYXhpb3MucG9zdCgnaHR0cHM6Ly9kYXRhLXNjaWVuY2UtY29tcC0wMS5oZXJva3VhcHAuY29tL3Rlc3RfZnVuYycsIHsKICAgICAgICAgIHRlc3Q6ICdoZWxsb19hcGknCiAgICAgICAgfSkKICAgICAgICAudGhlbigocmVzcG9uc2UpID0+IHsKICAgICAgICAgIHRoaXMudGVzdF9hcGkgPSByZXNwb25zZS5kYXRhLnRlc3RfcmV0dXJuCiAgICAgICAgfSkKICAgICAgfSwKICAgICAgcmVhZEZpbGVBc3luYyAoZmlsZSkgewogICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7CiAgICAgICAgICBjb25zdCByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpCiAgICAgICAgICByZWFkZXIub25sb2FkID0gKCkgPT4gewogICAgICAgICAgICByZXNvbHZlKHJlYWRlci5yZXN1bHQpCiAgICAgICAgICB9CiAgICAgICAgICByZWFkZXIub25lcnJvciA9IHJlamVjdAogICAgICAgICAgcmVhZGVyLnJlYWRBc1RleHQoZmlsZSkKICAgICAgICB9KQogICAgICB9LAogICAgICBhc3luYyBmaWxlU2VsZWN0KGZpbGUpewogICAgICAgIGNvbnNvbGUubG9nKCdmdW5jLeKGk2ZpbGVTZWxlY3QnKQogICAgICAgIHRyeSB7CiAgICAgICAgICBjb25zdCBjc3YgPSBhd2FpdCB0aGlzLnJlYWRGaWxlQXN5bmMoZmlsZSkKICAgICAgICAgIHRoaXMuc3ViRGF0YSA9IGNzdgogICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAgIGNvbnNvbGUubG9nKGUpCiAgICAgICAgfQogICAgICB9LAogICAgICBhc3luYyBnZXRTY29yZSgpewogICAgICAgIGNvbnNvbGUubG9nKCdmdW5jLeKGk2dldFNjb3JlJykKICAgICAgICAvLyBQT1NUCiAgICAgICAgYXdhaXQgYXhpb3MucG9zdCgnaHR0cDovLzEyNy4wLjAuMTo1MDAzL2dldF9zY29yZScsIHsKICAgICAgICAgIGFyZ19zdWJEYXRhOiB0aGlzLnN1YkRhdGEsCiAgICAgICAgICBhcmdfc2VsZWN0aW9uX25hbWU6IHRoaXMuc2VsZWN0aW9uX25hbWUsCiAgICAgICAgfSkKICAgICAgICAudGhlbigocmVzcG9uc2UpID0+IHsKICAgICAgICAgIHRoaXMuc2NvcmUgPSByZXNwb25zZS5kYXRhLnNjb3JlCiAgICAgICAgICB0aGlzLmdldFJhbmtpbmdUYWJsZSgpCiAgICAgICAgfSkKICAgICAgfSwKICAgICAgYXN5bmMgZ2V0UmFua2luZ1RhYmxlKCl7CiAgICAgICAgY29uc29sZS5sb2coJ2Z1bmMt4oaTZ2V0UmFua2luZ1RhYmxlJykKICAgICAgICAvLyBQT1NUCiAgICAgICAgYXdhaXQgYXhpb3MucG9zdCgnaHR0cDovLzEyNy4wLjAuMTo1MDAzL2dldF9yYW5raW5nX3RhYmxlJywgewogICAgICAgIH0pCiAgICAgICAgLnRoZW4oKHJlc3BvbnNlKSA9PiB7CiAgICAgICAgICB0aGlzLnJhbmtpbmdUYWJsZSA9IHJlc3BvbnNlLmRhdGEucmFua2luZ190YWJsZQogICAgICAgIH0pCiAgICAgICAgY29uc29sZS5sb2codGhpcy5yYW5raW5nVGFibGUpCiAgICAgICAgdGhpcy51cGRhdGVSYW5raW5nVGFibGUoKQogICAgICB9LAogICAgICB1cGRhdGVSYW5raW5nVGFibGUoKSB7CiAgICAgICAgY29uc29sZS5sb2coJ2Z1bmMt4oaTdXBkYXRlUmFua2luZ1RhYmxlJykKICAgICAgICBjb25zdCBwYXJ0aWNpcGFudHMgPSBbXTsKICAgICAgICBjb25zdCBsaW5lcyA9IHRoaXMucmFua2luZ1RhYmxlLnNwbGl0KCJcbiIpOwogICAgICAgIGxpbmVzLmZvckVhY2goZWxlbWVudCA9PiB7CiAgICAgICAgICBjb25zdCBwYXJ0aWNpcGFudHNEYXRhID0gZWxlbWVudC5zcGxpdCgiLCIpOwogICAgICAgICAgY29uc3QgcGFydGljaXBhbnQgPSB7CiAgICAgICAgICAgIHJhbms6IHBhcnRpY2lwYW50c0RhdGFbMF0sCiAgICAgICAgICAgIG5hbWU6IHBhcnRpY2lwYW50c0RhdGFbMV0sCiAgICAgICAgICAgIHNjb3JlOiBwYXJ0aWNpcGFudHNEYXRhWzJdLAogICAgICAgICAgICBuX3N1Ym1pc3Npb246IHBhcnRpY2lwYW50c0RhdGFbM10KICAgICAgICAgIH07CiAgICAgICAgICBwYXJ0aWNpcGFudHMucHVzaChwYXJ0aWNpcGFudCk7CiAgICAgICAgdGhpcy5wYXJ0aWNpcGFudHMgPSBwYXJ0aWNpcGFudHMKICAgICAgICB9KTsKICAgICAgfSwKICAgIH0sCiAgICAvLyBtb3VudGVkICgpIHsKICAgIGNyZWF0ZWQgKCkgewogICAgICBjb25zb2xlLmxvZygnZnVuYy3ihpNtb3VudGVkJykKICAgICAgY29uc29sZS5sb2codGhpcy5wYXJ0aWNpcGFudHMpCiAgICAgIHRoaXMuZ2V0UmFua2luZ1RhYmxlKCkKICAgIH0KICB9Cg=="},{"version":3,"sources":["App.vue"],"names":[],"mappingsfile":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <v-app>\n    <v-app-bar color=\"primary\" dark app class='title'>\n      <v-toolbar-title>Data Science Competition #1</v-toolbar-title>\n      <v-spacer></v-spacer>\n      <v-btn x-large icon dark @click='getRankingTable'>\n        <v-icon dark>mdi-cached</v-icon>\n      </v-btn>\n    </v-app-bar>\n    <v-content>\n      <v-container>\n        <v-row>\n          <v-col>\n            <v-select v-model=\"selection_name\" :items='names' label='select your name'> </v-select>\n          </v-col>\n          <v-col>\n            <v-file-input @change='fileSelect' show-size label='selec your submission file' accept='.csv' ></v-file-input>\n          </v-col>\n        </v-row>\n        <v-row justify='end'>\n            <v-btn x-large color='primary' @click='testApi' outlined target='#de'>{{test_api}}</v-btn>\n            <v-btn x-large color='primary' @click='getScore' outlined target='#de'>submit</v-btn>\n        </v-row>\n        <v-list-item-title class=\"title grey--text text--darken-2\" align='center' style='margin-top: 30px'>\n          your submission score is <h2><font color='blue'>{{score}}</font></h2>\n        </v-list-item-title>\n        <v-divider></v-divider>\n        <v-list-item-title class=\"title grey--text text--darken-2\" align='center' style='margin-top: 30px'>\n          Leaderboard\n        </v-list-item-title>\n        <v-data-table\n          :headers=\"headers\" \n          :items=\"participants\" \n          :items-per-page=\"10\" \n          class=\"elevation-1 category-table\"\n          style=\"margin-left: 100px; margin-right: 100px;\" >\n          <template slot=\"items\" slot-scope=\"props\">\n            <td class=\"text-xs-right\">{{ props.item.code }}</td>\n            <td class=\"text-xs-right\">{{ props.item.name }}</td>\n            <td class=\"text-xs-right\">{{ props.item.workerType }}</td>\n          </template>\n        </v-data-table>\n      </v-container>\n    </v-content>\n  </v-app>\n</template>\n<script>\nimport axios from 'axios'\n  export default {\n    data () {\n      return {\n        test_api:'test_api',\n        score: '...',\n        hello: '',\n        subData: '',\n        rankingTable: '',\n        sortBy: 'rank',\n        sortDesc: false,\n        selection_name: '',\n        names: ['A', 'B', 'C'],\n        dropdown_font: ['Arial', 'Calibri', 'Courier', 'Verdana'],\n        headers: [\n          {\n            text: '#',\n            align: 'center',\n            sortable: false,\n            value: 'rank',\n          },\n          { text: 'Name', value: 'name'},\n          { text: 'Score', value: 'score'},\n          { text: 'N_Submission', value: 'n_submission' },\n        ],\n        participants: [\n          {\n            rank: 1,\n            name: 'A',\n            score: 159,\n            n_submission: 6.0,\n          },\n          {\n            rank: 2,\n            name: 'B',\n            score: 237,\n            n_submission: 9.0,\n          },\n          {\n            rank: 3,\n            name: 'C',\n            score: 262,\n            n_submission: 16.0,\n          },\n        ],\n      }\n    },\n    methods: {\n      async testApi(){\n        console.log('func-â†“testApi')\n        // POST\n        await axios.post('https://data-science-comp-01.herokuapp.com/test_func', {\n          test: 'hello_api'\n        })\n        .then((response) => {\n          this.test_api = response.data.test_return\n        })\n      },\n      readFileAsync (file) {\n        return new Promise((resolve, reject) => {\n          const reader = new FileReader()\n          reader.onload = () => {\n            resolve(reader.result)\n          }\n          reader.onerror = reject\n          reader.readAsText(file)\n        })\n      },\n      async fileSelect(file){\n        console.log('func-â†“fileSelect')\n        try {\n          const csv = await this.readFileAsync(file)\n          this.subData = csv\n        } catch (e) {\n          console.log(e)\n        }\n      },\n      async getScore(){\n        console.log('func-â†“getScore')\n        // POST\n        await axios.post('http://127.0.0.1:5003/get_score', {\n          arg_subData: this.subData,\n          arg_selection_name: this.selection_name,\n        })\n        .then((response) => {\n          this.score = response.data.score\n          this.getRankingTable()\n        })\n      },\n      async getRankingTable(){\n        console.log('func-â†“getRankingTable')\n        // POST\n        await axios.post('http://127.0.0.1:5003/get_ranking_table', {\n        })\n        .then((response) => {\n          this.rankingTable = response.data.ranking_table\n        })\n        console.log(this.rankingTable)\n        this.updateRankingTable()\n      },\n      updateRankingTable() {\n        console.log('func-â†“updateRankingTable')\n        const participants = [];\n        const lines = this.rankingTable.split(\"\\n\");\n        lines.forEach(element => {\n          const participantsData = element.split(\",\");\n          const participant = {\n            rank: participantsData[0],\n            name: participantsData[1],\n            score: participantsData[2],\n            n_submission: participantsData[3]\n          };\n          participants.push(participant);\n        this.participants = participants\n        });\n      },\n    },\n    // mounted () {\n    created () {\n      console.log('func-â†“mounted')\n      console.log(this.participants)\n      this.getRankingTable()\n    }\n  }\n</script>\n"]}]}