{"remainingRequest":"/home/fkubota/Git/data-science-comp-01/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/fkubota/Git/data-science-comp-01/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/fkubota/Git/data-science-comp-01/src/App.vue","mtime":1586820880982},{"path":"/home/fkubota/Git/data-science-comp-01/node_modules/cache-loader/dist/cjs.js","mtime":1586602393340},{"path":"/home/fkubota/Git/data-science-comp-01/node_modules/babel-loader/lib/index.js","mtime":1586602393348},{"path":"/home/fkubota/Git/data-science-comp-01/node_modules/vuetify-loader/lib/loader.js","mtime":1586602393040},{"path":"/home/fkubota/Git/data-science-comp-01/node_modules/cache-loader/dist/cjs.js","mtime":1586602393340},{"path":"/home/fkubota/Git/data-science-comp-01/node_modules/vue-loader/lib/index.js","mtime":1586602393268}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdheGlvcycKICBleHBvcnQgZGVmYXVsdCB7CiAgICBkYXRhICgpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBoZXJva3VfYWRkcjogJ2h0dHBzOi8vZGF0YS1zY2llbmNlLWNvbXAtMDEuaGVyb2t1YXBwLmNvbS8nLAogICAgICAgIHNob3dfc2NvcmVfYWxlcnQ6IGZhbHNlLAogICAgICAgIHNob3dfbmFtZV9hbGVydDogZmFsc2UsCiAgICAgICAgc2hvd19zY29yZTogZmFsc2UsCiAgICAgICAgc2hvd19vdmVybGF5OiBmYWxzZSwKICAgICAgICBzaG93X292ZXJsYXlfdGFibGU6IHRydWUsCiAgICAgICAgdGVzdF9hcGk6J3Rlc3RfYXBpJywKICAgICAgICBzY29yZTogJy4uLicsCiAgICAgICAgaGVsbG86ICcnLAogICAgICAgIHN1YkRhdGE6ICcnLAogICAgICAgIHJhbmtpbmdUYWJsZTogJycsCiAgICAgICAgc29ydEJ5OiAncmFuaycsCiAgICAgICAgc29ydERlc2M6IGZhbHNlLAogICAgICAgIHNlbGVjdGlvbl9uYW1lOiAnJywKICAgICAgICBuYW1lczogWydBJywgJ0InLCAnQyddLAogICAgICAgIGRyb3Bkb3duX2ZvbnQ6IFsnQXJpYWwnLCAnQ2FsaWJyaScsICdDb3VyaWVyJywgJ1ZlcmRhbmEnXSwKICAgICAgICBoZWFkZXJzOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgIHRleHQ6ICcjJywKICAgICAgICAgICAgYWxpZ246ICdjZW50ZXInLAogICAgICAgICAgICBzb3J0YWJsZTogZmFsc2UsCiAgICAgICAgICAgIHZhbHVlOiAncmFuaycsCiAgICAgICAgICB9LAogICAgICAgICAgeyB0ZXh0OiAnTmFtZScsIHZhbHVlOiAnbmFtZSd9LAogICAgICAgICAgeyB0ZXh0OiAnU2NvcmUnLCB2YWx1ZTogJ3Njb3JlJ30sCiAgICAgICAgICB7IHRleHQ6ICdOX1N1Ym1pc3Npb24nLCB2YWx1ZTogJ25fc3VibWlzc2lvbicgfSwKICAgICAgICBdLAogICAgICAgIHBhcnRpY2lwYW50czogWwogICAgICAgICAgewogICAgICAgICAgICByYW5rOiAnLi4uJywKICAgICAgICAgICAgbmFtZTogJy4uLicsCiAgICAgICAgICAgIHNjb3JlOiAnLi4uJywKICAgICAgICAgICAgbl9zdWJtaXNzaW9uOiAnLi4uJywKICAgICAgICAgIH0sCiAgICAgICAgXSwKICAgICAgfQogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgYXN5bmMgdGVzdEFwaSgpewogICAgICAgIGNvbnNvbGUubG9nKCdmdW5jLeKGk3Rlc3RBcGknKQogICAgICAgIC8vIFBPU1QKICAgICAgICAvLyBhd2FpdCBheGlvcy5wb3N0KCdodHRwczovL2RhdGEtc2NpZW5jZS1jb21wLTAxLmhlcm9rdWFwcC5jb20vdGVzdF9mdW5jJywgewogICAgICAgIGF3YWl0IGF4aW9zLnBvc3QodGhpcy5oZXJva3VfYWRkcisndGVzdF9mdW5jJywgewogICAgICAgICAgdGVzdDogJ2hlbGxvX2FwaScsCiAgICAgICAgfSkKICAgICAgICAudGhlbigocmVzcG9uc2UpID0+IHsKICAgICAgICAgIHRoaXMudGVzdF9hcGkgPSByZXNwb25zZS5kYXRhLnRlc3RfcmV0dXJuCiAgICAgICAgfSkKICAgICAgfSwKICAgICAgcmVhZEZpbGVBc3luYyAoZmlsZSkgewogICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7CiAgICAgICAgICBjb25zdCByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpCiAgICAgICAgICByZWFkZXIub25sb2FkID0gKCkgPT4gewogICAgICAgICAgICByZXNvbHZlKHJlYWRlci5yZXN1bHQpCiAgICAgICAgICB9CiAgICAgICAgICByZWFkZXIub25lcnJvciA9IHJlamVjdAogICAgICAgICAgcmVhZGVyLnJlYWRBc1RleHQoZmlsZSkKICAgICAgICB9KQogICAgICB9LAogICAgICBhc3luYyBmaWxlU2VsZWN0KGZpbGUpewogICAgICAgIGNvbnNvbGUubG9nKCdmdW5jLeKGk2ZpbGVTZWxlY3QnKQogICAgICAgIHRyeSB7CiAgICAgICAgICBsZXQgY3N2ID0gYXdhaXQgdGhpcy5yZWFkRmlsZUFzeW5jKGZpbGUpCiAgICAgICAgICBjc3YgPSBjc3YucmVwbGFjZSgvXHI/XG4vZywgJ1xuJyk7CiAgICAgICAgICB0aGlzLnN1YkRhdGEgPSBjc3Y7CiAgICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgICAgY29uc29sZS5sb2coZSkKICAgICAgICB9CiAgICAgIH0sCiAgICAgIGFzeW5jIGdldFNjb3JlKCl7CiAgICAgICAgY29uc29sZS5sb2coJ2Z1bmMt4oaTZ2V0U2NvcmUnKQogICAgICAgIGlmICh0aGlzLnNlbGVjdGlvbl9uYW1lID09ICcnKXsKICAgICAgICAgIC8vIGFsZXJ0KCdzZWxlY3QgeW91ciBuYW1lJyk7CiAgICAgICAgICB0aGlzLnNob3dfc2NvcmVfYWxlcnQgPSB0cnVlCiAgICAgICAgICByZXR1cm4KICAgICAgICB9CiAgICAgICAgdGhpcy5zaG93X3Njb3JlID0gZmFsc2UKICAgICAgICB0aGlzLnNob3dfb3ZlcmxheSA9IHRydWUKICAgICAgICAvLyBQT1NUCiAgICAgICAgYXdhaXQgYXhpb3MucG9zdCh0aGlzLmhlcm9rdV9hZGRyICsgJ2dldF9zY29yZScsIHsKICAgICAgICAgIGFyZ19zdWJEYXRhOiB0aGlzLnN1YkRhdGEsCiAgICAgICAgICBhcmdfc2VsZWN0aW9uX25hbWU6IHRoaXMuc2VsZWN0aW9uX25hbWUsCiAgICAgICAgfSkKICAgICAgICAudGhlbigocmVzcG9uc2UpID0+IHsKICAgICAgICAgIC8vIHRoaXMuc2NvcmUgPSByZXNwb25zZS5kYXRhLnNjb3JlCiAgICAgICAgICBjb25zdCBzY29yZSA9IHJlc3BvbnNlLmRhdGEuc2NvcmUKICAgICAgICAgIGlmIChzY29yZSA9PSAnYmFkX3N1Ym1pc3Npb24nKXsKICAgICAgICAgICAgLy8gYWxlcnQoJ2ludmFsaWQgc3VibWlzc2lvbiBzdHlsZScpOwogICAgICAgICAgICB0aGlzLnNob3dfc2NvcmVfYWxlcnQgPSB0cnVlCiAgICAgICAgICB9ZWxzZXsKICAgICAgICAgICAgdGhpcy5zY29yZSA9IHNjb3JlCiAgICAgICAgICAgIHRoaXMuZ2V0UmFua2luZ1RhYmxlKCkKICAgICAgICAgIH0KICAgICAgICB0aGlzLnNob3dfc2NvcmUgPSB0cnVlCiAgICAgICAgdGhpcy5zaG93X292ZXJsYXkgPSBmYWxzZQogICAgICAgIH0pCiAgICAgIH0sCiAgICAgIGFzeW5jIGdldFJhbmtpbmdUYWJsZSgpewogICAgICAgIGNvbnNvbGUubG9nKCdmdW5jLeKGk2dldFJhbmtpbmdUYWJsZScpCiAgICAgICAgLy8gUE9TVAogICAgICAgIC8vIGF3YWl0IGF4aW9zLnBvc3QoJ2h0dHA6Ly8xMjcuMC4wLjE6NTAwMy9nZXRfcmFua2luZ190YWJsZScsIHsKICAgICAgICBhd2FpdCBheGlvcy5wb3N0KHRoaXMuaGVyb2t1X2FkZHIgKyAnZ2V0X3JhbmtpbmdfdGFibGUnLCB7CiAgICAgICAgfSkKICAgICAgICAudGhlbigocmVzcG9uc2UpID0+IHsKICAgICAgICAgIHRoaXMucmFua2luZ1RhYmxlID0gcmVzcG9uc2UuZGF0YS5yYW5raW5nX3RhYmxlCiAgICAgICAgfSkKICAgICAgICB0aGlzLnVwZGF0ZVJhbmtpbmdUYWJsZSgpCiAgICAgIH0sCiAgICAgIGFzeW5jIGdldFBhcnRpY2lwYW50cygpewogICAgICAgIGNvbnNvbGUubG9nKCdmdW5jLeKGk2dldFBhcnRpY2lwYW50cycpCiAgICAgICAgLy8gUE9TVAogICAgICAgIGF3YWl0IGF4aW9zLnBvc3QodGhpcy5oZXJva3VfYWRkcisnZ2V0X3BhcnRpY2lwYW50cycsIHsKICAgICAgICB9KQogICAgICAgIC50aGVuKChyZXNwb25zZSkgPT4gewogICAgICAgICAgY29uc3QgbmFtZXNfc3RyID0gcmVzcG9uc2UuZGF0YS5wYXJ0aWNpcGFudHMKICAgICAgICAgIGNvbnN0IG5hbWVzID0gbmFtZXNfc3RyLnNwbGl0KCcsJykKICAgICAgICAgIHRoaXMubmFtZXMgPSBuYW1lcwogICAgICAgIH0pCiAgICAgIH0sCiAgICAgIHVwZGF0ZVJhbmtpbmdUYWJsZSgpIHsKICAgICAgICBjb25zb2xlLmxvZygnZnVuYy3ihpN1cGRhdGVSYW5raW5nVGFibGUnKQogICAgICAgIGNvbnN0IHBhcnRpY2lwYW50cyA9IFtdOwogICAgICAgIGNvbnN0IGxpbmVzID0gdGhpcy5yYW5raW5nVGFibGUuc3BsaXQoIlxuIik7CiAgICAgICAgbGluZXMuZm9yRWFjaChlbGVtZW50ID0+IHsKICAgICAgICAgIGNvbnN0IHBhcnRpY2lwYW50c0RhdGEgPSBlbGVtZW50LnNwbGl0KCIsIik7CiAgICAgICAgICBjb25zdCBwYXJ0aWNpcGFudCA9IHsKICAgICAgICAgICAgcmFuazogcGFydGljaXBhbnRzRGF0YVswXSwKICAgICAgICAgICAgbmFtZTogcGFydGljaXBhbnRzRGF0YVsxXSwKICAgICAgICAgICAgc2NvcmU6IHBhcnRpY2lwYW50c0RhdGFbMl0sCiAgICAgICAgICAgIG5fc3VibWlzc2lvbjogcGFydGljaXBhbnRzRGF0YVszXQogICAgICAgICAgfTsKICAgICAgICAgIHBhcnRpY2lwYW50cy5wdXNoKHBhcnRpY2lwYW50KTsKICAgICAgICB0aGlzLnBhcnRpY2lwYW50cyA9IHBhcnRpY2lwYW50cwogICAgICAgIH0pOwogICAgICB9LAogICAgICBnZXRDb2xvciAocmFuaykgewogICAgICAgIGlmIChyYW5rID09IDEpIHJldHVybiAnYW1iZXIgYWNjZW50LTInCiAgICAgICAgZWxzZSBpZiAocmFuayA9PSAyKSByZXR1cm4gJ2JsdWUtZ3JleSBsaWdodGVuLTQnCiAgICAgICAgZWxzZSBpZiAocmFuayA9PSAzKSByZXR1cm4gJyNCODczMzMnCiAgICAgICAgZWxzZSByZXR1cm4gJ3doaXRlJwogICAgICB9LAogICAgfSwKICAgIC8vIG1vdW50ZWQgKCkgewogICAgY3JlYXRlZCAoKSB7CiAgICAgIGNvbnNvbGUubG9nKCdmdW5jLeKGk21vdW50ZWQnKQogICAgICBjb25zb2xlLmxvZyh0aGlzLnBhcnRpY2lwYW50cykKICAgICAgdGhpcy5nZXRQYXJ0aWNpcGFudHMoKQogICAgICB0aGlzLmdldFJhbmtpbmdUYWJsZSgpCiAgICB9CiAgfQo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <v-app>\n    <template>\n      <v-overlay :value=\"show_overlay\">\n        <v-progress-circular indeterminate size=\"64\"></v-progress-circular>\n      </v-overlay>\n      <v-snackbar v-model=\"show_score_alert\" top dark color='red' :timeout=2000>\n        <h4>select your name</h4>\n        <v-btn icon dark color='white' @click.native=\"show_score_alert = false\">\n          <v-icon dark>mdi-close</v-icon>\n        </v-btn>\n      </v-snackbar>\n      <v-snackbar v-model=\"show_name_alert\" top dark color='red' :timeout=2000>\n        <h4>invalid submission style</h4>\n        <v-btn icon dark color='white' @click.native=\"show_name_alert = false\">\n          <v-icon dark>mdi-close</v-icon>\n        </v-btn>\n      </v-snackbar>\n    </template>\n    <v-app-bar color=\"primary\" dark app class='title'>\n      <v-toolbar-title>Data Science Competition #1</v-toolbar-title>\n      <v-spacer></v-spacer>\n      <v-btn x-large icon dark @click='getRankingTable'>\n        <v-icon dark>mdi-cached</v-icon>\n      </v-btn>\n    </v-app-bar>\n    <v-footer color=\"primary\" dark app></v-footer>\n    <v-card class=\"mx-auto\" width=1000>\n    <v-content>\n      <v-container>\n        <v-row align=\"end\">\n          <v-col>\n            <v-spacer></v-spacer>\n          </v-col>\n          <v-col>\n              <v-select v-model=\"selection_name\" :items='names' label='select your name' prepend-icon=\"mdi-account-circle\" style='width: 400px'></v-select>\n              <v-file-input @change='fileSelect' show-size label='select your submission file' accept='.csv'></v-file-input>\n          </v-col>\n          <v-col>\n              <v-btn large color='primary' @click='getScore' outlined target='#de' class=\"ma-2\">\n                <v-icon left>mdi-cloud-upload</v-icon> submit\n              </v-btn>\n          </v-col>\n          <v-col>\n            <v-spacer></v-spacer>\n          </v-col>\n        </v-row>\n        <v-row justify='center' style='margin-top: 50px margin-bottom: 50px'>\n          <v-expand-transition>\n            <v-card v-if=show_score width=500 height=100>\n              <div class=\"title grey--text text--darken-2\" align='center'>\n                your submission score is \n              </div>\n              <div v-if=\"this.show_score\" style='fontSize: 40px' class='primary--text' align='center'>\n                  <p>{{score}}</p>\n              </div>\n            </v-card>\n          </v-expand-transition>\n        </v-row>\n\n        <!-- <v-divider></v-divider> -->\n        <div class=\"title grey--text text--darken-2\" align='center' style='margin-top: 50px'>\n          <p>Leaderboard</p>\n        </div>\n          <v-data-table\n            :headers=\"headers\" \n            :items=\"participants\" \n            :items-per-page=\"100\" \n            hide-default-footer\n            class=\"table-striped table-bordered\">\n            <template v-slot:item.rank=\"{ item }\">\n              <v-chip :color=\"getColor(item.rank)\">{{ item.rank }}</v-chip>\n            </template>\n          </v-data-table>\n      </v-container>\n    </v-content>\n    </v-card>\n  </v-app>\n</template>\n<script>\nimport axios from 'axios'\n  export default {\n    data () {\n      return {\n        heroku_addr: 'https://data-science-comp-01.herokuapp.com/',\n        show_score_alert: false,\n        show_name_alert: false,\n        show_score: false,\n        show_overlay: false,\n        show_overlay_table: true,\n        test_api:'test_api',\n        score: '...',\n        hello: '',\n        subData: '',\n        rankingTable: '',\n        sortBy: 'rank',\n        sortDesc: false,\n        selection_name: '',\n        names: ['A', 'B', 'C'],\n        dropdown_font: ['Arial', 'Calibri', 'Courier', 'Verdana'],\n        headers: [\n          {\n            text: '#',\n            align: 'center',\n            sortable: false,\n            value: 'rank',\n          },\n          { text: 'Name', value: 'name'},\n          { text: 'Score', value: 'score'},\n          { text: 'N_Submission', value: 'n_submission' },\n        ],\n        participants: [\n          {\n            rank: '...',\n            name: '...',\n            score: '...',\n            n_submission: '...',\n          },\n        ],\n      }\n    },\n    methods: {\n      async testApi(){\n        console.log('func-↓testApi')\n        // POST\n        // await axios.post('https://data-science-comp-01.herokuapp.com/test_func', {\n        await axios.post(this.heroku_addr+'test_func', {\n          test: 'hello_api',\n        })\n        .then((response) => {\n          this.test_api = response.data.test_return\n        })\n      },\n      readFileAsync (file) {\n        return new Promise((resolve, reject) => {\n          const reader = new FileReader()\n          reader.onload = () => {\n            resolve(reader.result)\n          }\n          reader.onerror = reject\n          reader.readAsText(file)\n        })\n      },\n      async fileSelect(file){\n        console.log('func-↓fileSelect')\n        try {\n          let csv = await this.readFileAsync(file)\n          csv = csv.replace(/\\r?\\n/g, '\\n');\n          this.subData = csv;\n        } catch (e) {\n          console.log(e)\n        }\n      },\n      async getScore(){\n        console.log('func-↓getScore')\n        if (this.selection_name == ''){\n          // alert('select your name');\n          this.show_score_alert = true\n          return\n        }\n        this.show_score = false\n        this.show_overlay = true\n        // POST\n        await axios.post(this.heroku_addr + 'get_score', {\n          arg_subData: this.subData,\n          arg_selection_name: this.selection_name,\n        })\n        .then((response) => {\n          // this.score = response.data.score\n          const score = response.data.score\n          if (score == 'bad_submission'){\n            // alert('invalid submission style');\n            this.show_score_alert = true\n          }else{\n            this.score = score\n            this.getRankingTable()\n          }\n        this.show_score = true\n        this.show_overlay = false\n        })\n      },\n      async getRankingTable(){\n        console.log('func-↓getRankingTable')\n        // POST\n        // await axios.post('http://127.0.0.1:5003/get_ranking_table', {\n        await axios.post(this.heroku_addr + 'get_ranking_table', {\n        })\n        .then((response) => {\n          this.rankingTable = response.data.ranking_table\n        })\n        this.updateRankingTable()\n      },\n      async getParticipants(){\n        console.log('func-↓getParticipants')\n        // POST\n        await axios.post(this.heroku_addr+'get_participants', {\n        })\n        .then((response) => {\n          const names_str = response.data.participants\n          const names = names_str.split(',')\n          this.names = names\n        })\n      },\n      updateRankingTable() {\n        console.log('func-↓updateRankingTable')\n        const participants = [];\n        const lines = this.rankingTable.split(\"\\n\");\n        lines.forEach(element => {\n          const participantsData = element.split(\",\");\n          const participant = {\n            rank: participantsData[0],\n            name: participantsData[1],\n            score: participantsData[2],\n            n_submission: participantsData[3]\n          };\n          participants.push(participant);\n        this.participants = participants\n        });\n      },\n      getColor (rank) {\n        if (rank == 1) return 'amber accent-2'\n        else if (rank == 2) return 'blue-grey lighten-4'\n        else if (rank == 3) return '#B87333'\n        else return 'white'\n      },\n    },\n    // mounted () {\n    created () {\n      console.log('func-↓mounted')\n      console.log(this.participants)\n      this.getParticipants()\n      this.getRankingTable()\n    }\n  }\n</script>"]}]}