{"remainingRequest":"/home/fkubota/Git/data-science-comp-01/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/fkubota/Git/data-science-comp-01/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/fkubota/Git/data-science-comp-01/src/App.vue","mtime":1586746027839},{"path":"/home/fkubota/Git/data-science-comp-01/node_modules/cache-loader/dist/cjs.js","mtime":1586602393340},{"path":"/home/fkubota/Git/data-science-comp-01/node_modules/babel-loader/lib/index.js","mtime":1586602393348},{"path":"/home/fkubota/Git/data-science-comp-01/node_modules/vuetify-loader/lib/loader.js","mtime":1586602393040},{"path":"/home/fkubota/Git/data-science-comp-01/node_modules/cache-loader/dist/cjs.js","mtime":1586602393340},{"path":"/home/fkubota/Git/data-science-comp-01/node_modules/vue-loader/lib/index.js","mtime":1586602393268}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdheGlvcycKICBleHBvcnQgZGVmYXVsdCB7CiAgICBkYXRhICgpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBoZXJva3VfYWRkcjogJ2h0dHBzOi8vZGF0YS1zY2llbmNlLWNvbXAtMDEuaGVyb2t1YXBwLmNvbS8nLAogICAgICAgIHNob3dfc2NvcmVfYWxlcnQ6IGZhbHNlLAogICAgICAgIHNob3dfbmFtZV9hbGVydDogZmFsc2UsCiAgICAgICAgc2hvd19zY29yZTogZmFsc2UsCiAgICAgICAgc2hvd19vdmVybGF5OiBmYWxzZSwKICAgICAgICB0ZXN0X2FwaTondGVzdF9hcGknLAogICAgICAgIHNjb3JlOiAnLi4uJywKICAgICAgICBoZWxsbzogJycsCiAgICAgICAgc3ViRGF0YTogJycsCiAgICAgICAgcmFua2luZ1RhYmxlOiAnJywKICAgICAgICBzb3J0Qnk6ICdyYW5rJywKICAgICAgICBzb3J0RGVzYzogZmFsc2UsCiAgICAgICAgc2VsZWN0aW9uX25hbWU6ICcnLAogICAgICAgIG5hbWVzOiBbJ0EnLCAnQicsICdDJ10sCiAgICAgICAgZHJvcGRvd25fZm9udDogWydBcmlhbCcsICdDYWxpYnJpJywgJ0NvdXJpZXInLCAnVmVyZGFuYSddLAogICAgICAgIGhlYWRlcnM6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgdGV4dDogJyMnLAogICAgICAgICAgICBhbGlnbjogJ2NlbnRlcicsCiAgICAgICAgICAgIHNvcnRhYmxlOiBmYWxzZSwKICAgICAgICAgICAgdmFsdWU6ICdyYW5rJywKICAgICAgICAgIH0sCiAgICAgICAgICB7IHRleHQ6ICdOYW1lJywgdmFsdWU6ICduYW1lJ30sCiAgICAgICAgICB7IHRleHQ6ICdTY29yZScsIHZhbHVlOiAnc2NvcmUnfSwKICAgICAgICAgIHsgdGV4dDogJ05fU3VibWlzc2lvbicsIHZhbHVlOiAnbl9zdWJtaXNzaW9uJyB9LAogICAgICAgIF0sCiAgICAgICAgcGFydGljaXBhbnRzOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgIHJhbms6ICcuLi4nLAogICAgICAgICAgICBuYW1lOiAnLi4uJywKICAgICAgICAgICAgc2NvcmU6ICcuLi4nLAogICAgICAgICAgICBuX3N1Ym1pc3Npb246ICcuLi4nLAogICAgICAgICAgfSwKICAgICAgICBdLAogICAgICB9CiAgICB9LAogICAgbWV0aG9kczogewogICAgICBhc3luYyB0ZXN0QXBpKCl7CiAgICAgICAgY29uc29sZS5sb2coJ2Z1bmMt4oaTdGVzdEFwaScpCiAgICAgICAgLy8gUE9TVAogICAgICAgIC8vIGF3YWl0IGF4aW9zLnBvc3QoJ2h0dHBzOi8vZGF0YS1zY2llbmNlLWNvbXAtMDEuaGVyb2t1YXBwLmNvbS90ZXN0X2Z1bmMnLCB7CiAgICAgICAgYXdhaXQgYXhpb3MucG9zdCh0aGlzLmhlcm9rdV9hZGRyKyd0ZXN0X2Z1bmMnLCB7CiAgICAgICAgICB0ZXN0OiAnaGVsbG9fYXBpJywKICAgICAgICB9KQogICAgICAgIC50aGVuKChyZXNwb25zZSkgPT4gewogICAgICAgICAgdGhpcy50ZXN0X2FwaSA9IHJlc3BvbnNlLmRhdGEudGVzdF9yZXR1cm4KICAgICAgICB9KQogICAgICB9LAogICAgICByZWFkRmlsZUFzeW5jIChmaWxlKSB7CiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHsKICAgICAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCkKICAgICAgICAgIHJlYWRlci5vbmxvYWQgPSAoKSA9PiB7CiAgICAgICAgICAgIHJlc29sdmUocmVhZGVyLnJlc3VsdCkKICAgICAgICAgIH0KICAgICAgICAgIHJlYWRlci5vbmVycm9yID0gcmVqZWN0CiAgICAgICAgICByZWFkZXIucmVhZEFzVGV4dChmaWxlKQogICAgICAgIH0pCiAgICAgIH0sCiAgICAgIGFzeW5jIGZpbGVTZWxlY3QoZmlsZSl7CiAgICAgICAgY29uc29sZS5sb2coJ2Z1bmMt4oaTZmlsZVNlbGVjdCcpCiAgICAgICAgdHJ5IHsKICAgICAgICAgIGxldCBjc3YgPSBhd2FpdCB0aGlzLnJlYWRGaWxlQXN5bmMoZmlsZSkKICAgICAgICAgIGNzdiA9IGNzdi5yZXBsYWNlKC9ccj9cbi9nLCAnXG4nKTsKICAgICAgICAgIHRoaXMuc3ViRGF0YSA9IGNzdjsKICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgICBjb25zb2xlLmxvZyhlKQogICAgICAgIH0KICAgICAgfSwKICAgICAgYXN5bmMgZ2V0U2NvcmUoKXsKICAgICAgICBjb25zb2xlLmxvZygnZnVuYy3ihpNnZXRTY29yZScpCiAgICAgICAgaWYgKHRoaXMuc2VsZWN0aW9uX25hbWUgPT0gJycpewogICAgICAgICAgLy8gYWxlcnQoJ3NlbGVjdCB5b3VyIG5hbWUnKTsKICAgICAgICAgIHRoaXMuc2hvd19zY29yZV9hbGVydCA9IHRydWUKICAgICAgICAgIHJldHVybgogICAgICAgIH0KICAgICAgICB0aGlzLnNob3dfc2NvcmUgPSBmYWxzZQogICAgICAgIHRoaXMuc2hvd19vdmVybGF5ID0gdHJ1ZQogICAgICAgIC8vIFBPU1QKICAgICAgICBhd2FpdCBheGlvcy5wb3N0KHRoaXMuaGVyb2t1X2FkZHIgKyAnZ2V0X3Njb3JlJywgewogICAgICAgICAgYXJnX3N1YkRhdGE6IHRoaXMuc3ViRGF0YSwKICAgICAgICAgIGFyZ19zZWxlY3Rpb25fbmFtZTogdGhpcy5zZWxlY3Rpb25fbmFtZSwKICAgICAgICB9KQogICAgICAgIC50aGVuKChyZXNwb25zZSkgPT4gewogICAgICAgICAgLy8gdGhpcy5zY29yZSA9IHJlc3BvbnNlLmRhdGEuc2NvcmUKICAgICAgICAgIGNvbnN0IHNjb3JlID0gcmVzcG9uc2UuZGF0YS5zY29yZQogICAgICAgICAgaWYgKHNjb3JlID09ICdiYWRfc3VibWlzc2lvbicpewogICAgICAgICAgICAvLyBhbGVydCgnaW52YWxpZCBzdWJtaXNzaW9uIHN0eWxlJyk7CiAgICAgICAgICAgIHRoaXMuc2hvd19zY29yZV9hbGVydCA9IHRydWUKICAgICAgICAgIH1lbHNlewogICAgICAgICAgICB0aGlzLnNjb3JlID0gc2NvcmUKICAgICAgICAgICAgdGhpcy5nZXRSYW5raW5nVGFibGUoKQogICAgICAgICAgfQogICAgICAgIHRoaXMuc2hvd19zY29yZSA9IHRydWUKICAgICAgICB0aGlzLnNob3dfb3ZlcmxheSA9IGZhbHNlCiAgICAgICAgfSkKICAgICAgfSwKICAgICAgYXN5bmMgZ2V0UmFua2luZ1RhYmxlKCl7CiAgICAgICAgY29uc29sZS5sb2coJ2Z1bmMt4oaTZ2V0UmFua2luZ1RhYmxlJykKICAgICAgICAvLyBQT1NUCiAgICAgICAgLy8gYXdhaXQgYXhpb3MucG9zdCgnaHR0cDovLzEyNy4wLjAuMTo1MDAzL2dldF9yYW5raW5nX3RhYmxlJywgewogICAgICAgIGF3YWl0IGF4aW9zLnBvc3QodGhpcy5oZXJva3VfYWRkciArICdnZXRfcmFua2luZ190YWJsZScsIHsKICAgICAgICB9KQogICAgICAgIC50aGVuKChyZXNwb25zZSkgPT4gewogICAgICAgICAgdGhpcy5yYW5raW5nVGFibGUgPSByZXNwb25zZS5kYXRhLnJhbmtpbmdfdGFibGUKICAgICAgICB9KQogICAgICAgIHRoaXMudXBkYXRlUmFua2luZ1RhYmxlKCkKICAgICAgfSwKICAgICAgYXN5bmMgZ2V0UGFydGljaXBhbnRzKCl7CiAgICAgICAgY29uc29sZS5sb2coJ2Z1bmMt4oaTZ2V0UGFydGljaXBhbnRzJykKICAgICAgICAvLyBQT1NUCiAgICAgICAgYXdhaXQgYXhpb3MucG9zdCh0aGlzLmhlcm9rdV9hZGRyKydnZXRfcGFydGljaXBhbnRzJywgewogICAgICAgIH0pCiAgICAgICAgLnRoZW4oKHJlc3BvbnNlKSA9PiB7CiAgICAgICAgICBjb25zdCBuYW1lc19zdHIgPSByZXNwb25zZS5kYXRhLnBhcnRpY2lwYW50cwogICAgICAgICAgY29uc3QgbmFtZXMgPSBuYW1lc19zdHIuc3BsaXQoJywnKQogICAgICAgICAgdGhpcy5uYW1lcyA9IG5hbWVzCiAgICAgICAgfSkKICAgICAgfSwKICAgICAgdXBkYXRlUmFua2luZ1RhYmxlKCkgewogICAgICAgIGNvbnNvbGUubG9nKCdmdW5jLeKGk3VwZGF0ZVJhbmtpbmdUYWJsZScpCiAgICAgICAgY29uc3QgcGFydGljaXBhbnRzID0gW107CiAgICAgICAgY29uc3QgbGluZXMgPSB0aGlzLnJhbmtpbmdUYWJsZS5zcGxpdCgiXG4iKTsKICAgICAgICBsaW5lcy5mb3JFYWNoKGVsZW1lbnQgPT4gewogICAgICAgICAgY29uc3QgcGFydGljaXBhbnRzRGF0YSA9IGVsZW1lbnQuc3BsaXQoIiwiKTsKICAgICAgICAgIGNvbnN0IHBhcnRpY2lwYW50ID0gewogICAgICAgICAgICByYW5rOiBwYXJ0aWNpcGFudHNEYXRhWzBdLAogICAgICAgICAgICBuYW1lOiBwYXJ0aWNpcGFudHNEYXRhWzFdLAogICAgICAgICAgICBzY29yZTogcGFydGljaXBhbnRzRGF0YVsyXSwKICAgICAgICAgICAgbl9zdWJtaXNzaW9uOiBwYXJ0aWNpcGFudHNEYXRhWzNdCiAgICAgICAgICB9OwogICAgICAgICAgcGFydGljaXBhbnRzLnB1c2gocGFydGljaXBhbnQpOwogICAgICAgIHRoaXMucGFydGljaXBhbnRzID0gcGFydGljaXBhbnRzCiAgICAgICAgfSk7CiAgICAgIH0sCiAgICAgIGdldENvbG9yIChyYW5rKSB7CiAgICAgICAgaWYgKHJhbmsgPT0gMSkgcmV0dXJuICdhbWJlciBhY2NlbnQtMicKICAgICAgICBlbHNlIGlmIChyYW5rID09IDIpIHJldHVybiAnYmx1ZS1ncmV5IGxpZ2h0ZW4tNCcKICAgICAgICBlbHNlIGlmIChyYW5rID09IDMpIHJldHVybiAnIzA4NzMzMycKICAgICAgICBlbHNlIHJldHVybiAnd2hpdGUnCiAgICAgIH0sCiAgICB9LAogICAgLy8gbW91bnRlZCAoKSB7CiAgICBjcmVhdGVkICgpIHsKICAgICAgY29uc29sZS5sb2coJ2Z1bmMt4oaTbW91bnRlZCcpCiAgICAgIGNvbnNvbGUubG9nKHRoaXMucGFydGljaXBhbnRzKQogICAgICB0aGlzLmdldFBhcnRpY2lwYW50cygpCiAgICAgIHRoaXMuZ2V0UmFua2luZ1RhYmxlKCkKICAgIH0KICB9Cg=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <v-app>\n    <template>\n      <v-overlay :value=\"show_overlay\">\n        <v-progress-circular indeterminate size=\"64\"></v-progress-circular>\n      </v-overlay>\n      <v-snackbar v-model=\"show_score_alert\" top dark color='red' :timeout=2000>\n        <h4>select your name</h4>\n        <v-btn icon dark color='white' @click.native=\"show_score_alert = false\">\n          <v-icon dark>mdi-close</v-icon>\n        </v-btn>\n      </v-snackbar>\n      <v-snackbar v-model=\"show_name_alert\" top dark color='red' :timeout=2000>\n        <h4>invalid submission style</h4>\n        <v-btn icon dark color='white' @click.native=\"show_name_alert = false\">\n          <v-icon dark>mdi-close</v-icon>\n        </v-btn>\n      </v-snackbar>\n    </template>\n    <v-app-bar color=\"primary\" dark app class='title'>\n      <v-toolbar-title>Data Science Competition #1</v-toolbar-title>\n      <v-spacer></v-spacer>\n      <v-btn x-large icon dark @click='getRankingTable'>\n        <v-icon dark>mdi-cached</v-icon>\n      </v-btn>\n    </v-app-bar>\n    <v-footer color=\"primary\" dark app></v-footer>\n    <v-card class=\"mx-auto\" width=1000>\n    <v-content>\n      <v-container>\n        <v-row>\n            <v-select v-model=\"selection_name\" :items='names' label='select your name' prepend-icon=\"mdi-account-circle\" style='width: 50px'></v-select>\n            <v-file-input @change='fileSelect' show-size label='select your submission file' accept='.csv' style='width: 50px'></v-file-input>\n            <v-btn large color='primary' @click='getScore' outlined target='#de' class=\"ma-2\">\n              <v-icon left>mdi-cloud-upload</v-icon> submit\n            </v-btn>\n        </v-row>\n        <v-row style='margin-top: 50px'>\n          <v-spacer></v-spacer>\n          <v-card width=500 height=100>\n            <div class=\"title grey--text text--darken-2\" align='center'>\n              your submission score is \n            </div>\n            <transition mode=\"out-in\">\n              <div v-if=\"this.show_score\" style='fontSize: 40px' class='primary--text' align='center'>\n                  <p>{{score}}</p>\n              </div>\n            </transition>\n          </v-card>\n          <v-spacer></v-spacer>\n        </v-row>\n\n        <!-- <v-divider></v-divider> -->\n        <div class=\"title grey--text text--darken-2\" align='center' style='margin-top: 50px'>\n          <p>Leaderboard</p>\n        </div>\n        <v-data-table\n          :headers=\"headers\" \n          :items=\"participants\" \n          :items-per-page=\"100\" \n          table-striped= true\n          class=\"table-striped table-bordered\">\n          <template v-slot:item.rank=\"{ item }\">\n            <v-chip :color=\"getColor(item.rank)\">{{ item.rank }}</v-chip>\n          </template>\n        </v-data-table>\n      </v-container>\n    </v-content>\n    </v-card>\n  </v-app>\n</template>\n<script>\nimport axios from 'axios'\n  export default {\n    data () {\n      return {\n        heroku_addr: 'https://data-science-comp-01.herokuapp.com/',\n        show_score_alert: false,\n        show_name_alert: false,\n        show_score: false,\n        show_overlay: false,\n        test_api:'test_api',\n        score: '...',\n        hello: '',\n        subData: '',\n        rankingTable: '',\n        sortBy: 'rank',\n        sortDesc: false,\n        selection_name: '',\n        names: ['A', 'B', 'C'],\n        dropdown_font: ['Arial', 'Calibri', 'Courier', 'Verdana'],\n        headers: [\n          {\n            text: '#',\n            align: 'center',\n            sortable: false,\n            value: 'rank',\n          },\n          { text: 'Name', value: 'name'},\n          { text: 'Score', value: 'score'},\n          { text: 'N_Submission', value: 'n_submission' },\n        ],\n        participants: [\n          {\n            rank: '...',\n            name: '...',\n            score: '...',\n            n_submission: '...',\n          },\n        ],\n      }\n    },\n    methods: {\n      async testApi(){\n        console.log('func-↓testApi')\n        // POST\n        // await axios.post('https://data-science-comp-01.herokuapp.com/test_func', {\n        await axios.post(this.heroku_addr+'test_func', {\n          test: 'hello_api',\n        })\n        .then((response) => {\n          this.test_api = response.data.test_return\n        })\n      },\n      readFileAsync (file) {\n        return new Promise((resolve, reject) => {\n          const reader = new FileReader()\n          reader.onload = () => {\n            resolve(reader.result)\n          }\n          reader.onerror = reject\n          reader.readAsText(file)\n        })\n      },\n      async fileSelect(file){\n        console.log('func-↓fileSelect')\n        try {\n          let csv = await this.readFileAsync(file)\n          csv = csv.replace(/\\r?\\n/g, '\\n');\n          this.subData = csv;\n        } catch (e) {\n          console.log(e)\n        }\n      },\n      async getScore(){\n        console.log('func-↓getScore')\n        if (this.selection_name == ''){\n          // alert('select your name');\n          this.show_score_alert = true\n          return\n        }\n        this.show_score = false\n        this.show_overlay = true\n        // POST\n        await axios.post(this.heroku_addr + 'get_score', {\n          arg_subData: this.subData,\n          arg_selection_name: this.selection_name,\n        })\n        .then((response) => {\n          // this.score = response.data.score\n          const score = response.data.score\n          if (score == 'bad_submission'){\n            // alert('invalid submission style');\n            this.show_score_alert = true\n          }else{\n            this.score = score\n            this.getRankingTable()\n          }\n        this.show_score = true\n        this.show_overlay = false\n        })\n      },\n      async getRankingTable(){\n        console.log('func-↓getRankingTable')\n        // POST\n        // await axios.post('http://127.0.0.1:5003/get_ranking_table', {\n        await axios.post(this.heroku_addr + 'get_ranking_table', {\n        })\n        .then((response) => {\n          this.rankingTable = response.data.ranking_table\n        })\n        this.updateRankingTable()\n      },\n      async getParticipants(){\n        console.log('func-↓getParticipants')\n        // POST\n        await axios.post(this.heroku_addr+'get_participants', {\n        })\n        .then((response) => {\n          const names_str = response.data.participants\n          const names = names_str.split(',')\n          this.names = names\n        })\n      },\n      updateRankingTable() {\n        console.log('func-↓updateRankingTable')\n        const participants = [];\n        const lines = this.rankingTable.split(\"\\n\");\n        lines.forEach(element => {\n          const participantsData = element.split(\",\");\n          const participant = {\n            rank: participantsData[0],\n            name: participantsData[1],\n            score: participantsData[2],\n            n_submission: participantsData[3]\n          };\n          participants.push(participant);\n        this.participants = participants\n        });\n      },\n      getColor (rank) {\n        if (rank == 1) return 'amber accent-2'\n        else if (rank == 2) return 'blue-grey lighten-4'\n        else if (rank == 3) return '#087333'\n        else return 'white'\n      },\n    },\n    // mounted () {\n    created () {\n      console.log('func-↓mounted')\n      console.log(this.participants)\n      this.getParticipants()\n      this.getRankingTable()\n    }\n  }\n</script>\n\n<style lang=\"scss\">\n .v-enter-active {\n  transition: all 1.0s ease 0s;\n }\n .v-leave-active {\n  transition: all 0s ease 0s;\n }\n .v-leave-active {\n  position: absolute;\n }\n .v-enter,\n .v-leave-to {\n  opacity: 0;\n }\n .v-enter {\n  transform: translateX(-60px);\n }\n .v-enter-to,\n .v-leave {\n  transform: translateX(0);\n }\n .v-leave-to {\n  transform: translateX(60px);\n }\n</style>"]}]}